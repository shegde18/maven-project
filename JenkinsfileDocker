pipeline
{
    agent any
    stages
    {
        stage('SCM Checkout')
        {
            steps
            {
                git branch: 'master', url: 'https://github.com/shegde18/maven-project.git'
            }
        }

        stage('Maven Unit Test')
        {
            steps
            {
                withMaven(globalMavenSettingsConfig: '9e23595d-479e-4595-8b81-6758cc64c862', jdk: 'SHJDK', maven: 'SHMVN', mavenSettingsConfig: '6d8b11e3-3096-4113-b29b-a157fcc11780', traceability: true) 
                {
                    sh 'mvn test'
                }
            }
        }

        stage('Maven Build')
        {
            steps
            {
                withMaven(globalMavenSettingsConfig: '9e23595d-479e-4595-8b81-6758cc64c862', jdk: 'SHJDK', maven: 'SHMVN', mavenSettingsConfig: '6d8b11e3-3096-4113-b29b-a157fcc11780', traceability: true) 
                {
                    sh 'mvn package'
                }
            }
        }

        stage('Docker Image Creation')
        {
            steps
            {
                sh 'docker build -t shegde18/mytomcat:v1 .'
            }
        }

        stage('Docker Image push to Image Repository')
        {
            steps
            {
                withDockerRegistry(credentialsId: 'DockerHubCred', url: 'https://index.docker.io/v1/') 
                {
                    sh 'docker push shegde18/mytomcat:v1'
                }
            }
        }

        stage('Docker Container Creation on EC2')
        {
            steps
            {
                script
                {
                    def dockerrun = 'docker run -itd -p 8080:8080 --name tomcatcontainer shegde18/mytomcat:v1'
                }

                sshagent (credentials: ['jenkins-docker-deploy-to-ec2'])
                {
	                sh 'ssh -o StrictHostKeyChecking=no ec2-user@172.31.36.90 ${dockerrun}'
                }
            }
        }
    }
}
